@model ServisTakip.Models.FaultTrack.response.FaultTrackResponseModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link href="~/css/main.css" rel="stylesheet" />
    <script src="~/js/main.js"></script>

    <script>
        var faultStage = @Model.FaultStage;
    </script>

    <title>Servis Takip</title>
</head>
<body>

    <div class="container">

    <!-- Logo Container -->
    <div class="logo-container">
        <img src="~/images/logo.png" />
    </div>
    <br />
        <!-- Progress -->
        <div class="steps">
            <div class="steps-header">
                <div class="progress">
                    <div class="progress-bar" role="progressbar" style="width: 20%" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            </div>
            <div class="steps-body">

                <div class="step">
                    <span class="step-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-airplay"><path d="M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"></path><polygon points="12 15 17 21 7 21 12 15"></polygon></svg></span>
                    Teslim Alındı
                </div>

                <div class="step">
                    <span class="step-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg></span>
                    Ürün İnceleniyor
                </div>

                <div class="step">
                    <span class="step-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-cpu"><rect x="4" y="4" width="16" height="16" rx="2" ry="2"></rect><rect x="9" y="9" width="6" height="6"></rect><line x1="9" y1="1" x2="9" y2="4"></line><line x1="15" y1="1" x2="15" y2="4"></line><line x1="9" y1="20" x2="9" y2="23"></line><line x1="15" y1="20" x2="15" y2="23"></line><line x1="20" y1="9" x2="23" y2="9"></line><line x1="20" y1="14" x2="23" y2="14"></line><line x1="1" y1="9" x2="4" y2="9"></line><line x1="1" y1="14" x2="4" y2="14"></line></svg></span>
                    Arıza Tespit Edildi
                </div>

                <div class="step">
                    <span class="step-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-tool"><path d="M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"></path></svg></span>
                    Tamir Ediliyor
                </div>
                <div class="step">
                    <span class="step-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-tablet"><rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect><line x1="12" y1="18" x2="12.01" y2="18"></line></svg></span>
                    Ürün Hazır
                </div>
                <div class="step">
                    <span class="step-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-archive"><polyline points="21 8 21 21 3 21 3 8"></polyline><rect x="1" y="3" width="22" height="5"></rect><line x1="10" y1="12" x2="14" y2="12"></line></svg></span>
                    Teslim Edildi
                </div>
            </div>
        </div>

        <br />


        <div class="garanti">
            <br />
            <div class="left-container exclamation-mark col-md-4">
                <img src="/images/unlem.png" alt="">
            </div>

            <div class="right-container col-md-8">
                <div class="ariza-text">
                    <p>Tespit edilen ürün arızası: <strong>@Model.FaultDefinition </strong></p>
                </div>

                <div class="garanti-text">
                    Tamir veya değişim için garanti belgesi gereklidir. Lütfen garanti belgenizi bizimle paylaşın.
                </div>

                <!-- Garanti Belgesi Yükleme Alanı -->
                <div class="garanti-belgesi-input">
                    <label for="garantiBelgesi">Garanti Belgesi :</label>
                    <input type="file" id="garantiBelgesi" name="garantiBelgesi" accept=".pdf, .jpg, .jpeg, .png">
                </div>
                <br />
                <!-- Gönder Butonu -->
                <button class="submit-btn">Formu Gönder</button>
            </div>
        </div>

        <br />

        @*    <!-- Footer -->
        <div class="d-sm-flex flex-wrap justify-content-between align-items-center text-center pt-4">
        <div class="custom-control custom-checkbox mt-2 mr-3">
        <input class="custom-control-input" type="checkbox" id="notify-me" checked="">
        <label class="custom-control-label" for="notify-me">Hazır olduğunda beni bilgilendir.</label>
        </div>
        <a class="btn btn-primary btn-sm mt-2" href="#" id="detaylariGoruntuleButton">Detaylar</a>
        </div> *@




        <div class="productstatus">
            <span>Ürün durumu: <strong id="faultStageText"></strong></span>
            <span>Tahmini Teslim tarihi: <strong>@Model.EstimatedDeliveryDate.ToShortDateString()</strong></span>
        </div>


        <br />


        <div class="customerdetails">
            <div class="row">
                <div class="col-md-2">
                    Personel:<br> <strong>@Model.FaultWorkerName</strong>
                </div>
                <div class="col-md-2">
                    Sipariş No:<br>  <strong>@Model.FaultDocumentNumber</strong>
                </div>
                <div class="col-md-2">
                    Ad Soyad:<br>
                    <strong>
                        @if (!string.IsNullOrEmpty(Model.Customer.CustomerName) && Model.Customer.CustomerName.Contains(" "))
                        {
                            string[] names = Model.Customer.CustomerName.Split(' ');
                            string firstName = names[0].Length >= 2 ? names[0].Substring(0, 2).ToUpper() + "**" : names[0].ToUpper();
                            string lastName = names[1].Length >= 2 ? names[1].Substring(0, 2).ToUpper() + "**" : names[1].ToUpper();
                            @firstName
                            @Html.Raw(" ")
                            @lastName
                                    }
                        else if (!string.IsNullOrEmpty(Model.Customer.CustomerName))
                        {
                            string fullName = Model.Customer.CustomerName.Length >= 4 ? Model.Customer.CustomerName.Substring(0, 2).ToUpper() + "** " + Model.Customer.CustomerName.Substring(Model.Customer.CustomerName.IndexOf(' ') + 1, 2).ToUpper() + "**" : Model.Customer.CustomerName.ToUpper();
                            @fullName
                        }
                        else
                        {
                            @Model.Customer.CustomerName
                        }
                    </strong>
                </div>
                <div class="col-md-2">
                    Adres:<br><strong>@(Model.Customer.CustomerCity.Length > 1 ? Model.Customer.CustomerCity.Substring(0, 2).ToUpper() + new string('*', Model.Customer.CustomerCity.Length - 2) : "")/@(Model.Customer.CustomerCounty.Length > 1 ? Model.Customer.CustomerCounty.Substring(0, 2).ToUpper() + new string('*', Model.Customer.CustomerCounty.Length - 2) : "")</strong>


                </div>
                <div class="col-md-2">
                    GSM:<br><strong>@(Model.Customer.CustomerPhone.Length > 4 ? Model.Customer.CustomerPhone.Substring(0, 4) + "**" : "")</strong>
                </div>

                <div class="col-md-2">
                    E-posta:<br><strong>@(Model.Customer.CustomerEmail.Length > 5 ? Model.Customer.CustomerEmail.Substring(0, 2) + "**@" + Model.Customer.CustomerEmail.Substring(Model.Customer.CustomerEmail.IndexOf('@') + 1, 2) + "**" : "")</strong>
                </div>
         
            </div>
        </div>

        <br /><br />

        <div class="productdetails">
            <div class="row">
                <div class="col-md-5">
                    <!-- Model ismi -->
                    <p><strong>Model :</strong> @Model.Product.ProductName </p>
                </div>
                <div class="col-md-5">
                    <!-- Ürün numarası -->
                    <p><strong>Seri No :</strong> @Model.Product.ProductSerialNumber </p>
                </div>
                <div class="col-md-2">
                    <!-- Buton -->
                    <button type="button" data-toggle="modal" data-target="#productDetailsModal">
                        Detaylar
                    </button>
                </div>
            </div>
        </div>

        <!-- Modal -->
        <div class="modal fade" id="productDetailsModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Ürün Detayları</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!-- Ürün detayları buraya gelecek -->
                        <p>@Model.Product.ProductAccessories</p>
                    </div>
                </div>
            </div>
        </div>


        <br />


        @await Component.InvokeAsync("ProductMovements", new { faultTrackingID = Model.FaultTrackingID })


        <br />

       
        <div class="footer">
            <img src="~/images/destek.jpg" alt="">
        </div>



    </div>

</body>
</html>